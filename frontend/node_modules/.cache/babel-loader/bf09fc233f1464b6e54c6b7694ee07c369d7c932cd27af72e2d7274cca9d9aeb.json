{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projekt\\\\frontend\\\\src\\\\Data_Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Books from './Books';\nimport Authors from './Authors';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Data_Admin = () => {\n  _s();\n  const [authors, setAuthors] = useState([]);\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    fetchAuthors();\n    fetchBooks();\n  }, []);\n  const fetchAuthors = async () => {\n    const response = await axios.get('http://localhost:8000/api/authors');\n    setAuthors(response.data);\n  };\n  const fetchBooks = async () => {\n    const response = await axios.get('http://localhost:8000/api/books');\n    setBooks(response.data);\n  };\n  const createBook = async bookData => {\n    const existingAuthor = authors.find(author => author.firstname === bookData.author.firstname && author.lastname === bookData.author.lastname);\n    let authorId;\n    if (existingAuthor) {\n      authorId = existingAuthor._id;\n    } else {\n      const newAuthorResponse = await axios.post('http://localhost:8000/api/authors', bookData.author);\n      authorId = newAuthorResponse.data._id;\n    }\n    const bookExists = books.some(book => book.title === bookData.title && book.author._id === authorId);\n    if (!bookExists) {\n      await axios.post('http://localhost:8000/api/books', {\n        title: bookData.title,\n        author: authorId,\n        price: bookData.price\n      });\n      fetchBooks();\n    }\n  };\n  const updateBook = async bookData => {\n    const existingAuthor = authors.find(author => author.firstname === bookData.author.firstname && author.lastname === bookData.author.lastname);\n    let authorId;\n    if (existingAuthor) {\n      authorId = existingAuthor._id;\n    } else {\n      const newAuthorResponse = await axios.post('http://localhost:8000/api/authors', bookData.author);\n      authorId = newAuthorResponse.data._id;\n    }\n    await axios.put(`http://localhost:8000/api/books/${bookData._id}`, {\n      title: bookData.title,\n      author: authorId,\n      price: bookData.price\n    });\n    fetchBooks();\n  };\n  const deleteBook = async bookId => {\n    await axios.delete(`http://localhost:8000/api/books/${bookId}`);\n    fetchBooks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author's First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author's Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author's Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: books.map(book => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.author.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.author.lastname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.author.dateofbirth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: book.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteBook(book._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, book._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      createBook: createBook,\n      updateBook: updateBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Data_Admin, \"VpzcExTiOvVxaPO0FmDUmq4w2QM=\");\n_c = Data_Admin;\nexport default Data_Admin;\nvar _c;\n$RefreshReg$(_c, \"Data_Admin\");","map":{"version":3,"names":["React","useState","useEffect","Books","Authors","axios","jsxDEV","_jsxDEV","Data_Admin","_s","authors","setAuthors","books","setBooks","fetchAuthors","fetchBooks","response","get","data","createBook","bookData","existingAuthor","find","author","firstname","lastname","authorId","_id","newAuthorResponse","post","bookExists","some","book","title","price","updateBook","put","deleteBook","bookId","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dateofbirth","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/projekt/frontend/src/Data_Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Books from './Books';\r\nimport Authors from './Authors';\r\nimport axios from 'axios';\r\n\r\nconst Data_Admin = () => {\r\n  const [authors, setAuthors] = useState([]);\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAuthors();\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  const fetchAuthors = async () => {\r\n    const response = await axios.get('http://localhost:8000/api/authors');\r\n    setAuthors(response.data);\r\n  };\r\n\r\n  const fetchBooks = async () => {\r\n    const response = await axios.get('http://localhost:8000/api/books');\r\n    setBooks(response.data);\r\n  };\r\n\r\n  const createBook = async (bookData) => {\r\n    const existingAuthor = authors.find(\r\n      (author) => author.firstname === bookData.author.firstname && author.lastname === bookData.author.lastname\r\n    );\r\n\r\n    let authorId;\r\n    if (existingAuthor) {\r\n      authorId = existingAuthor._id;\r\n    } else {\r\n      const newAuthorResponse = await axios.post('http://localhost:8000/api/authors', bookData.author);\r\n      authorId = newAuthorResponse.data._id;\r\n    }\r\n\r\n    const bookExists = books.some(\r\n      (book) => book.title === bookData.title && book.author._id === authorId\r\n    );\r\n\r\n    if (!bookExists) {\r\n      await axios.post('http://localhost:8000/api/books', {\r\n        title: bookData.title,\r\n        author: authorId,\r\n        price: bookData.price\r\n      });\r\n      fetchBooks();\r\n    }\r\n  };\r\n\r\n  const updateBook = async (bookData) => {\r\n    const existingAuthor = authors.find(\r\n      (author) => author.firstname === bookData.author.firstname && author.lastname === bookData.author.lastname\r\n    );\r\n\r\n    let authorId;\r\n    if (existingAuthor) {\r\n      authorId = existingAuthor._id;\r\n    } else {\r\n      const newAuthorResponse = await axios.post('http://localhost:8000/api/authors', bookData.author);\r\n      authorId = newAuthorResponse.data._id;\r\n    }\r\n\r\n    await axios.put(`http://localhost:8000/api/books/${bookData._id}`, {\r\n      title: bookData.title,\r\n      author: authorId,\r\n      price: bookData.price\r\n    });\r\n\r\n    fetchBooks();\r\n  };\r\n\r\n  const deleteBook = async (bookId) => {\r\n    await axios.delete(`http://localhost:8000/api/books/${bookId}`);\r\n    fetchBooks();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Data Admin</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Author's First Name</th>\r\n            <th>Author's Last Name</th>\r\n            <th>Author's Birth</th>\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {books.map((book) => (\r\n            <tr key={book._id}>\r\n              <td>{book.title}</td>\r\n              <td>{book.author.firstname}</td>\r\n              <td>{book.author.lastname}</td>\r\n              <td>{book.author.dateofbirth}</td>\r\n              <td>{book.price}</td>\r\n              <td>\r\n                <button>Edit</button>\r\n                <button onClick={() => deleteBook(book._id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <Books createBook={createBook} updateBook={updateBook} />\r\n      <Authors />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Data_Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}